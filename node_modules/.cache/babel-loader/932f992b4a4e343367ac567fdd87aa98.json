{"ast":null,"code":"var _jsxFileName = \"/home/dannyp/Documents/Projects/Professional/enigma/src/components/rotor.tsx\";\nimport React, { Fragment } from \"react\";\nexport const Rotor = ({\n  rotor,\n  className,\n  inputHighlight,\n  ouputHighlight\n}) => {\n  const characterToElement = (borderClass, highlightIndex, highlightClass) => (char, index) => {\n    const highlighted = index === highlightIndex && highlightClass; //Class that adds a border once every two rotors, gives the impression everything is moving\n\n    const bordered = (index + rotor.shift) % 2 === 0 && borderClass;\n    return /*#__PURE__*/React.createElement(\"td\", {\n      className: `td ${className} ${highlighted} ${bordered}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, char);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, rotor.inputRow.split(\"\").map(characterToElement(\"borderRight\", 0, \"forwardPassLightUp\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, rotor.outputRow.split(\"\").characterToElement(\"borderRight\", 0, \"forwardPassLightUp\")));\n};","map":{"version":3,"sources":["/home/dannyp/Documents/Projects/Professional/enigma/src/components/rotor.tsx"],"names":["React","Fragment","Rotor","rotor","className","inputHighlight","ouputHighlight","characterToElement","borderClass","highlightIndex","highlightClass","char","index","highlighted","bordered","shift","inputRow","split","map","outputRow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAOA,OAAO,MAAMC,KAAuB,GAAG,CAAC;AACtCC,EAAAA,KADsC;AAEtCC,EAAAA,SAFsC;AAGtCC,EAAAA,cAHsC;AAItCC,EAAAA;AAJsC,CAAD,KAKjC;AACJ,QAAMC,kBAAkB,GAAG,CACzBC,WADyB,EAEzBC,cAFyB,EAGzBC,cAHyB,KAItB,CAACC,IAAD,EAAeC,KAAf,KAAiC;AACpC,UAAMC,WAAW,GAAGD,KAAK,KAAKH,cAAV,IAA4BC,cAAhD,CADoC,CAEpC;;AACA,UAAMI,QAAQ,GAAG,CAACF,KAAK,GAAGT,KAAK,CAACY,KAAf,IAAwB,CAAxB,KAA8B,CAA9B,IAAmCP,WAApD;AACA,wBACE;AAAI,MAAA,SAAS,EAAG,MAAKJ,SAAU,IAAGS,WAAY,IAAGC,QAAS,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8DH,IAA9D,CADF;AAGD,GAXD;;AAYA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACa,QAAN,CACEC,KADF,CACQ,EADR,EAEEC,GAFF,CAEMX,kBAAkB,CAAC,aAAD,EAAgB,CAAhB,EAAmB,oBAAnB,CAFxB,CADH,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACgB,SAAN,CACEF,KADF,CACQ,EADR,EAEEV,kBAFF,CAEqB,aAFrB,EAEoC,CAFpC,EAEuC,oBAFvC,CADH,CANF,CADF;AAcD,CAhCM","sourcesContent":["import React, { Fragment } from \"react\";\ninterface IProps {\n  rotor: any;\n  className: String;\n  inputHighlight: string;\n  ouputHighlight: string;\n}\nexport const Rotor: React.FC<IProps> = ({\n  rotor,\n  className,\n  inputHighlight,\n  ouputHighlight,\n}) => {\n  const characterToElement = (\n    borderClass: string,\n    highlightIndex: number,\n    highlightClass: string\n  ) => (char: string, index: number) => {\n    const highlighted = index === highlightIndex && highlightClass;\n    //Class that adds a border once every two rotors, gives the impression everything is moving\n    const bordered = (index + rotor.shift) % 2 === 0 && borderClass;\n    return (\n      <td className={`td ${className} ${highlighted} ${bordered}`}>{char}</td>\n    );\n  };\n  return (\n    <Fragment>\n      <tr>\n        {rotor.inputRow\n          .split(\"\")\n          .map(characterToElement(\"borderRight\", 0, \"forwardPassLightUp\"))}\n      </tr>\n      <tr>\n        {rotor.outputRow\n          .split(\"\")\n          .characterToElement(\"borderRight\", 0, \"forwardPassLightUp\")}\n      </tr>\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}