{"ast":null,"code":"var _jsxFileName = \"/home/dannyp/Documents/Projects/Professional/enigma/src/App.tsx\";\nimport React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport { encryptString } from \"./machineLogic\";\nimport { rotors, reflector } from \"./config\";\nconsole.log(string => encryptString);\n\nfunction App() {\n  const reducer = (state, action) => {\n    const rotate = (string, index) => string.length == 26 && string.substring(index % 26) + string.substring(0, index % 26);\n\n    switch (action.type) {\n      case \"rotateRotor\":\n        return { ...state,\n          rotors: state.rotors.map( //Iterate through rotors, shift the input and output rotor of rotor with specified index\n          (oldValue, index) => index == action.payload.rotorIndex ? {\n            inputRotor: rotate(oldValue.inputRow, action.payload.shift),\n            outputRotor: rotate(oldValue.outputRow, action.payload.shift)\n          } : oldValue)\n        };\n    }\n  };\n\n  const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  const initialState = {\n    machine: {\n      rotors: rotors.map(rotorString => {\n        return {\n          inputRow: rotorString,\n          outputRow: alphabet\n        };\n      }),\n      reflector: reflector\n    },\n    input: \"I am an input\"\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Engima\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Rotor Shift: \", state.input), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Rotor Shift: \", state.rotorShift), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Rotor Settings: \", state.rotorSettings)));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dannyp/Documents/Projects/Professional/enigma/src/App.tsx"],"names":["React","useReducer","encryptString","rotors","reflector","console","log","string","App","reducer","state","action","rotate","index","length","substring","type","map","oldValue","payload","rotorIndex","inputRotor","inputRow","shift","outputRotor","outputRow","alphabet","initialState","machine","rotorString","input","dispatch","rotorShift","rotorSettings"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAA4C,OAA5C;AACA,OAAO,WAAP;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,UAAlC;AAEAC,OAAO,CAACC,GAAR,CAAaC,MAAD,IAAiBL,aAA7B;;AACA,SAASM,GAAT,GAAe;AACb,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAaC,MAAb,KAA6B;AAC3C,UAAMC,MAAM,GAAG,CAACL,MAAD,EAAiBM,KAAjB,KACbN,MAAM,CAACO,MAAP,IAAiB,EAAjB,IACAP,MAAM,CAACQ,SAAP,CAAiBF,KAAK,GAAG,EAAzB,IAA+BN,MAAM,CAACQ,SAAP,CAAiB,CAAjB,EAAoBF,KAAK,GAAG,EAA5B,CAFjC;;AAIA,YAAQF,MAAM,CAACK,IAAf;AACE,WAAK,aAAL;AACE,eAAO,EACL,GAAGN,KADE;AAELP,UAAAA,MAAM,EAAEO,KAAK,CAACP,MAAN,CAAac,GAAb,EACN;AACA,WAACC,QAAD,EAAgBL,KAAhB,KACEA,KAAK,IAAIF,MAAM,CAACQ,OAAP,CAAeC,UAAxB,GACI;AACEC,YAAAA,UAAU,EAAET,MAAM,CAACM,QAAQ,CAACI,QAAV,EAAoBX,MAAM,CAACQ,OAAP,CAAeI,KAAnC,CADpB;AAEEC,YAAAA,WAAW,EAAEZ,MAAM,CACjBM,QAAQ,CAACO,SADQ,EAEjBd,MAAM,CAACQ,OAAP,CAAeI,KAFE;AAFrB,WADJ,GAQIL,QAXA;AAFH,SAAP;AAFJ;AAmBD,GAxBD;;AA0BA,QAAMQ,QAAQ,GAAG,4BAAjB;AAEA,QAAMC,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE;AACPzB,MAAAA,MAAM,EAAEA,MAAM,CAACc,GAAP,CAAYY,WAAD,IAAyB;AAC1C,eAAO;AAAEP,UAAAA,QAAQ,EAAEO,WAAZ;AAAyBJ,UAAAA,SAAS,EAAEC;AAApC,SAAP;AACD,OAFO,CADD;AAIPtB,MAAAA,SAAS,EAAEA;AAJJ,KADU;AAOnB0B,IAAAA,KAAK,EAAE;AAPY,GAArB;AAUA,QAAM,CAACpB,KAAD,EAAQqB,QAAR,IAAoB9B,UAAU,CAACQ,OAAD,EAAUkB,YAAV,CAApC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBjB,KAAK,CAACoB,KAAxB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBpB,KAAK,CAACsB,UAAxB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqBtB,KAAK,CAACuB,aAA3B,CAJF,CADF,CADF;AAUD;;AAED,eAAezB,GAAf","sourcesContent":["import React, { useReducer, useState } from \"react\";\nimport \"./App.css\";\nimport { encryptString } from \"./machineLogic\";\nimport { rotors, reflector } from \"./config\";\nimport { stringify } from \"querystring\";\nconsole.log((string:string)=>encryptString);\nfunction App() {\n  const reducer = (state: any, action: any) => {\n    const rotate = (string: string, index: number) =>\n      string.length == 26 &&\n      string.substring(index % 26) + string.substring(0, index % 26);\n\n    switch (action.type) {\n      case \"rotateRotor\":\n        return {\n          ...state,\n          rotors: state.rotors.map(\n            //Iterate through rotors, shift the input and output rotor of rotor with specified index\n            (oldValue: any, index: number) =>\n              index == action.payload.rotorIndex\n                ? {\n                    inputRotor: rotate(oldValue.inputRow, action.payload.shift),\n                    outputRotor: rotate(\n                      oldValue.outputRow,\n                      action.payload.shift\n                    ),\n                  }\n                : oldValue\n          ),\n        };\n    }\n  };\n\n  const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  const initialState = {\n    machine: {\n      rotors: rotors.map((rotorString: string) => {\n        return { inputRow: rotorString, outputRow: alphabet };\n      }),\n      reflector: reflector,\n    },\n    input: \"I am an input\",\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Engima</h1>\n        <h2>Rotor Shift: {state.input}</h2>\n        <h2>Rotor Shift: {state.rotorShift}</h2>\n        <h2>Rotor Settings: {state.rotorSettings}</h2>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}