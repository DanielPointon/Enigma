{"ast":null,"code":"var _jsxFileName = \"/home/dannyp/Documents/Projects/Professional/enigma/src/components/rotor.tsx\";\nimport React, { Fragment } from \"react\";\nexport const Rotor = ({\n  rotor,\n  className\n}) => {\n  const characterToElement = borderClass => (char, index) => /*#__PURE__*/React.createElement(\"td\", {\n    //Include class that adds a border once every two rotors, gives the impression everything is moving\n    className: `td ${className} forwardPassLightUp ${index + rotor.shift % 2 === 0 && borderClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, char);\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, rotor.inputRow.split(\"\").map(characterToElement(\"borderRight\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, rotor.outputRow.split(\"\").map(characterToElement(\"borderLeft\"))));\n};","map":{"version":3,"sources":["/home/dannyp/Documents/Projects/Professional/enigma/src/components/rotor.tsx"],"names":["React","Fragment","Rotor","rotor","className","characterToElement","borderClass","char","index","shift","inputRow","split","map","outputRow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAKA,OAAO,MAAMC,KAAuB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA0B;AAC/D,QAAMC,kBAAkB,GAAIC,WAAD,IAAyB,CAClDC,IADkD,EAElDC,KAFkD,kBAIlD;AACE;AACA,IAAA,SAAS,EAAG,MAAKJ,SAAU,uBAAsBI,KAAK,GAAIL,KAAK,CAACM,KAAN,GAAc,CAAvB,KAA8B,CAA9B,IAAmCH,WAAY,EAFlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGC,IAHH,CAJF;;AAUA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAK,CAACO,QAAN,CAAeC,KAAf,CAAqB,EAArB,EAAyBC,GAAzB,CAA6BP,kBAAkB,CAAC,aAAD,CAA/C,CAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACU,SAAN,CAAgBF,KAAhB,CAAsB,EAAtB,EAA0BC,GAA1B,CAA8BP,kBAAkB,CAAC,YAAD,CAAhD,CAAL,CAFF,CADF;AAMD,CAjBM","sourcesContent":["import React, { Fragment } from \"react\";\ninterface IProps {\n  rotor: any;\n  className: String;\n}\nexport const Rotor: React.FC<IProps> = ({ rotor, className }) => {\n  const characterToElement = (borderClass: string) => (\n    char: string,\n    index: number\n  ) => (\n    <td\n      //Include class that adds a border once every two rotors, gives the impression everything is moving\n      className={`td ${className} forwardPassLightUp ${index + (rotor.shift % 2) === 0 && borderClass}`}>\n      {char}\n    </td>\n  );\n  return (\n    <Fragment>\n      <tr>{rotor.inputRow.split(\"\").map(characterToElement(\"borderRight\"))}</tr>\n      <tr>{rotor.outputRow.split(\"\").map(characterToElement(\"borderLeft\"))}</tr>\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}