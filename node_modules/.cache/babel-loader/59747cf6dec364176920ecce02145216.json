{"ast":null,"code":"var _jsxFileName = \"/home/dannyp/Documents/Projects/Professional/enigma/src/App.tsx\";\nimport React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport { rotors, reflector } from \"./config\";\nimport { Rotor } from \"./components/rotor\";\nimport { PlainRow } from \"./components/row\";\nimport { Dials } from \"./components/dials\";\nimport { reducer } from \"./reducers/main\";\n\nfunction App() {\n  const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  const initialState = {\n    machine: {\n      rotors: rotors.map(rotorString => {\n        return {\n          inputRow: rotorString,\n          outputRow: alphabet,\n          shift: 0\n        };\n      }),\n      reflector: reflector\n    },\n    input: \"I am an input\"\n  };\n  const highlights = {\n    input: {\n      forwardPassLightUp: [0],\n      backwardPassLightUp: [1]\n    },\n    output: {\n      forwardPassLightUp: [2],\n      backwardPassLightUp: [3]\n    }\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  console.log(state.machine);\n\n  const rotateRotor = (index, shift) => dispatch({\n    type: \"rotateRotor\",\n    payload: {\n      rotorIndex: index,\n      shift: shift\n    }\n  });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dials, {\n    rotateRotor: rotateRotor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: \"rotateRotor\",\n      payload: {\n        rotorIndex: 0,\n        shift: 1\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Shift\"), \";\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"well\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 8\n    }\n  }, \"Enigma Simulator\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"well\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Input\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control bg-success\",\n    id: \"in\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      borderLeft: \"2px solid white !important\",\n      borderRight: \"2px solid white !important\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PlainRow, {\n    className: \"well\",\n    row: alphabet // highlights={highlights}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), state.machine.rotors.map(rotor => /*#__PURE__*/React.createElement(Rotor, {\n    rotor: state.machine.rotors[0],\n    className: `alcert-danger`,\n    highlights: highlights,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(PlainRow, {\n    className: \"well\",\n    row: reflector,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dannyp/Documents/Projects/Professional/enigma/src/App.tsx"],"names":["React","useReducer","rotors","reflector","Rotor","PlainRow","Dials","reducer","App","alphabet","initialState","machine","map","rotorString","inputRow","outputRow","shift","input","highlights","forwardPassLightUp","backwardPassLightUp","output","state","dispatch","console","log","rotateRotor","index","type","payload","rotorIndex","borderLeft","borderRight","rotor"],"mappings":"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","sourcesContent":["import React, { useReducer, useState } from \"react\";\nimport \"./App.css\";\nimport { rotors, reflector } from \"./config\";\nimport { Rotor } from \"./components/rotor\";\nimport { PlainRow } from \"./components/row\";\nimport { Dials } from \"./components/dials\";\nimport { reducer } from \"./reducers/main\";\nfunction App() {\n  const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  const initialState = {\n    machine: {\n      rotors: rotors.map((rotorString: string) => {\n        return { inputRow: rotorString, outputRow: alphabet, shift: 0 };\n      }),\n      reflector: reflector,\n    },\n    input: \"I am an input\",\n  };\n\n  const highlights: any = {\n    input: { forwardPassLightUp: [0], backwardPassLightUp: [1] },\n    output: { forwardPassLightUp: [2], backwardPassLightUp: [3] },\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  console.log(state.machine);\n  const rotateRotor = (index: number, shift: number) =>\n    dispatch({\n      type: \"rotateRotor\",\n      payload: { rotorIndex: index, shift: shift },\n    });\n  return (\n    <div className=\"App\">\n      <Dials rotateRotor={rotateRotor}></Dials>\n      <button\n        onClick={() =>\n          dispatch({\n            type: \"rotateRotor\",\n            payload: { rotorIndex: 0, shift: 1 },\n          })\n        }\n      >\n        Shift\n      </button>\n      ;<div className=\"well\">Enigma Simulator</div>\n      <div className=\"well\">\n        <div className=\"form-group\">\n          <label>\n            <h2>Input</h2>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control bg-success\"\n            id=\"in\"\n            value=\"\"\n          ></input>\n        </div>\n        <table\n          style={{\n            borderLeft: \"2px solid white !important\",\n            borderRight: \"2px solid white !important\",\n          }}\n        >\n          <tbody>\n            <PlainRow\n              className=\"well\"\n              row={alphabet}\n              // highlights={highlights}\n            ></PlainRow>\n            {state.machine.rotors.map((rotor:any) => (\n              <Rotor\n                rotor={state.machine.rotors[0]}\n                className={`alcert-danger`}\n                highlights={highlights}\n              ></Rotor>\n            ))}\n            <PlainRow className=\"well\" row={reflector}></PlainRow>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}