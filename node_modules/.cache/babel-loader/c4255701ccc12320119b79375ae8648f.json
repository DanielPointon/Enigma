{"ast":null,"code":"var _jsxFileName = \"/home/dannyp/Documents/Projects/Professional/enigma/src/components/row.tsx\";\nimport React, { Fragment } from \"react\";\nexport const PlainRow = ({\n  row,\n  className // inputHighlight,\n  // ouputHighlight,\n\n}) => {\n  const characterToElement = (highlightIndex, highlightClass) => (char, index) => {\n    const highlighted = index === highlightIndex && highlightClass;\n    return /*#__PURE__*/React.createElement(\"td\", {\n      className: `td ${className} ${highlighted}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, char);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, row.split(\"\").map(characterToElement(inputHighlight, \"forwardPassLightUp\"))));\n};","map":{"version":3,"sources":["/home/dannyp/Documents/Projects/Professional/enigma/src/components/row.tsx"],"names":["React","Fragment","PlainRow","row","className","characterToElement","highlightIndex","highlightClass","char","index","highlighted","split","map","inputHighlight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAOA,OAAO,MAAMC,QAA0B,GAAG,CAAC;AACzCC,EAAAA,GADyC;AAEzCC,EAAAA,SAFyC,CAGzC;AACA;;AAJyC,CAAD,KAKpC;AACJ,QAAMC,kBAAkB,GAAG,CACzBC,cADyB,EAEzBC,cAFyB,KAGtB,CAACC,IAAD,EAAeC,KAAf,KAAiC;AACpC,UAAMC,WAAW,GAAGD,KAAK,KAAKH,cAAV,IAA4BC,cAAhD;AACA,wBAAO;AAAI,MAAA,SAAS,EAAG,MAAKH,SAAU,IAAGM,WAAY,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkDF,IAAlD,CAAP;AACD,GAND;;AAOA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,GAAG,CACDQ,KADF,CACQ,EADR,EAEEC,GAFF,CAEMP,kBAAkB,CAACQ,cAAD,EAAiB,oBAAjB,CAFxB,CADH,CADF,CADF;AASD,CAtBM","sourcesContent":["import React, { Fragment } from \"react\";\ninterface IProps {\n  row: any;\n  className: String;\n  // inputHighlight: number;\n  // ouputHighlight: number;\n}\nexport const PlainRow: React.FC<IProps> = ({\n  row,\n  className,\n  // inputHighlight,\n  // ouputHighlight,\n}) => {\n  const characterToElement = (\n    highlightIndex: number,\n    highlightClass: string\n  ) => (char: string, index: number) => {\n    const highlighted = index === highlightIndex && highlightClass;\n    return <td className={`td ${className} ${highlighted}`}>{char}</td>;\n  };\n  return (\n    <Fragment>\n      <tr>\n        {row\n          .split(\"\")\n          .map(characterToElement(inputHighlight, \"forwardPassLightUp\"))}\n      </tr>\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}