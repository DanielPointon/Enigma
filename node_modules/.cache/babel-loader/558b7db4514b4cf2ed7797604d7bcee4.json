{"ast":null,"code":"var _jsxFileName = \"/home/dannyp/Documents/Projects/Professional/enigma/src/App.tsx\";\nimport React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport { encryptString } from \"./machineLogic\";\nimport { rotors, reflector } from \"./config\";\nimport { Rotor } from \"./components/rotor\";\nimport { PlainRow } from \"./components/row\";\n\nfunction App() {\n  const reducer = (state, action) => {\n    const rotate = (string, index) => string.length == 26 && string.substring(index % 26) + string.substring(0, index % 26);\n\n    switch (action.type) {\n      case \"rotateRotor\":\n        return { ...state,\n          rotors: state.rotors.map( //Iterate through rotors, shift the input and output rotor of rotor with specified index\n          (oldValue, index) => index == action.payload.rotorIndex ? {\n            inputRotor: rotate(oldValue.inputRow, action.payload.shift),\n            outputRotor: rotate(oldValue.outputRow, action.payload.shift)\n          } : oldValue)\n        };\n    }\n  };\n\n  const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  const initialState = {\n    machine: {\n      rotors: rotors.map(rotorString => {\n        return {\n          inputRow: rotorString,\n          outputRow: alphabet,\n          shift: 0\n        };\n      }),\n      reflector: reflector\n    },\n    input: \"I am an input\"\n  };\n  const highlights = {\n    input: {\n      forwardPassLightUp: [0],\n      backwardPassLightUp: [1]\n    },\n    output: {\n      forwardPassLightUp: [2],\n      backwardPassLightUp: [3]\n    }\n  };\n  console.log(string => encryptString(string, state.machine));\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  /*#__PURE__*/\n  React.createElement(\"button\", {\n    onClick: () => dispatch({\n      'type': 'rotateRotor',\n      'payload': {\n        rotorIndex: 0,\n        shift: 0\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, \"Shift\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"well\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Enigma Simulator\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"well\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Configuration Code:\", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Reset\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    className: \"slider\",\n    id: \"formControlRange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    className: \"slider\",\n    id: \"formControlRange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    className: \"slider\",\n    id: \"formControlRange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"well\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Input\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control bg-success\",\n    id: \"in\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      borderLeft: \"2px solid white !important\",\n      borderRight: \"2px solid white !important\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PlainRow, {\n    className: \"well\",\n    row: alphabet // highlights={highlights}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Rotor, {\n    rotor: state.machine.rotors[0],\n    className: `alert-danger`,\n    highlights: highlights,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Rotor, {\n    rotor: state.machine.rotors[1],\n    className: `alert-warning`,\n    highlights: highlights,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Rotor, {\n    rotor: state.machine.rotors[2],\n    className: `alert-success`,\n    highlights: highlights,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PlainRow, {\n    className: \"well\",\n    row: reflector // highlights={highlights}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dannyp/Documents/Projects/Professional/enigma/src/App.tsx"],"names":["React","useReducer","encryptString","rotors","reflector","Rotor","PlainRow","App","reducer","state","action","rotate","string","index","length","substring","type","map","oldValue","payload","rotorIndex","inputRotor","inputRow","shift","outputRotor","outputRow","alphabet","initialState","machine","rotorString","input","highlights","forwardPassLightUp","backwardPassLightUp","output","console","log","dispatch","borderLeft","borderRight"],"mappings":"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","sourcesContent":["import React, { useReducer, useState } from \"react\";\nimport \"./App.css\";\nimport { encryptString } from \"./machineLogic\";\nimport { rotors, reflector } from \"./config\";\nimport { Rotor } from \"./components/rotor\";\nimport { PlainRow } from \"./components/row\";\nfunction App() {\n  const reducer = (state: any, action: any) => {\n    const rotate = (string: string, index: number) =>\n      string.length == 26 &&\n      string.substring(index % 26) + string.substring(0, index % 26);\n\n    switch (action.type) {\n      case \"rotateRotor\":\n        return {\n          ...state,\n          rotors: state.rotors.map(\n            //Iterate through rotors, shift the input and output rotor of rotor with specified index\n            (oldValue: any, index: number) =>\n              index == action.payload.rotorIndex\n                ? {\n                    inputRotor: rotate(oldValue.inputRow, action.payload.shift),\n                    outputRotor: rotate(\n                      oldValue.outputRow,\n                      action.payload.shift\n                    ),\n                  }\n                : oldValue\n          ),\n        };\n    }\n  };\n\n  const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  const initialState = {\n    machine: {\n      rotors: rotors.map((rotorString: string) => {\n        return { inputRow: rotorString, outputRow: alphabet, shift: 0 };\n      }),\n      reflector: reflector,\n    },\n    input: \"I am an input\",\n  };\n\n  const highlights:any = {\n    input: { forwardPassLightUp: [0], backwardPassLightUp: [1] },\n    output: { forwardPassLightUp: [2], backwardPassLightUp: [3] },\n  };\n  console.log((string: string) => encryptString(string, state.machine));\n  const [state, dispatch] = useReducer(reducer, initialState);\n  <button onClick={()=>dispatch({'type':'rotateRotor','payload':{rotorIndex:0,shift:0}})}>Shift</button>\n  return (\n    <div className=\"App\">\n      <div className=\"well\">Enigma Simulator</div>\n      <div className=\"well\">\n        <p>\n          Configuration Code:\n          <button className=\"btn btn-info\">Reset</button>\n        </p>\n        <input type=\"range\" className=\"slider\" id=\"formControlRange\"></input>\n        <br></br>\n        <input type=\"range\" className=\"slider\" id=\"formControlRange\"></input>\n        <br></br>\n        <input type=\"range\" className=\"slider\" id=\"formControlRange\"></input>\n      </div>\n      <div className=\"well\">\n        <div className=\"form-group\">\n          <label>\n            <h2>Input</h2>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control bg-success\"\n            id=\"in\"\n            value=\"\"\n          ></input>\n        </div>\n        <table\n          style={{\n            borderLeft: \"2px solid white !important\",\n            borderRight: \"2px solid white !important\",\n          }}\n        >\n          <tbody>\n            <PlainRow\n              className=\"well\"\n              row={alphabet}\n              // highlights={highlights}\n            ></PlainRow>\n            <Rotor\n              rotor={state.machine.rotors[0]}\n              className={`alert-danger`}\n              highlights={highlights}\n            ></Rotor>\n            <Rotor\n              rotor={state.machine.rotors[1]}\n              className={`alert-warning`}\n              highlights={highlights}\n            ></Rotor>\n            <Rotor\n              rotor={state.machine.rotors[2]}\n              className={`alert-success`}\n              highlights={highlights}\n            ></Rotor>\n            <PlainRow\n              className=\"well\"\n              row={reflector}\n              // highlights={highlights}\n            ></PlainRow>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}